package model2.board;

import java.io.IOException;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.oreilly.servlet.MultipartRequest;

import fileupload.FileUtil;
import utils.JSFunction;

@WebServlet("/mvcboard/write.do")
public class WriteController extends HttpServlet {

	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		req.getRequestDispatcher("/MVCBoard/Write.jsp").forward(req, resp);
	}

	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		// request 안에 application 생성 
		// ServletContext application = getServletContext(); 이렇게 해도됨 

		String saveDirectory = req.getServletContext().getRealPath("Uploads");
		int maxPostSize = 1024 * 1000; //(1MB)
		
		
		//MultipartRequest(request,저장할 경로,파일의최대대크기,인코딩,이름정책)
		// 객체를 생성해서 업로드 하는 것을 모듈화 시킬 것 
		MultipartRequest mr = FileUtil.uploadFile(req, saveDirectory, maxPostSize); //클래스 ( 업로드, 다운로드 , 삭제 ) 
		
		if(mr == null) {
			JSFunction.alertLocation(resp, "첨부파일이 제한 용량을 초과힙니다.", "../mvcboard/write.do");
			return;
		}
		 MVCBoardDTO dto = new MVCBoardDTO();
		 dto.setName(mr.getParameter("name"));
		 dto.setTitle(mr.getParameter("title"));
		 dto.setContent(mr.getParameter("content"));
		 dto.setPass(mr.getParameter("pass"));

;	}

}











